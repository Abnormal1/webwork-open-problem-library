##DESCRIPTION
## 
##ENDDESCRIPTION

## DBsubject()
## DBchapter()
## DBsection()
## Institution()
## Author()
## Date()
## Level()
## KEYWORDS('')
## RESOURCES('UBC-SM-18-066.png')
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')

##############################################################

DOCUMENT();

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

TEXT(beginproblem());

##############################################################
#
#  Setup
#
#

Context("Numeric");
#given
$e = 210;
$l = 1.5;
$load = random(4,8,0.5);
$d = random(8,14,1);

#image scale
$imgScale = .2;

#image aspect ratio
$width = $imgScale*1979;
$height = $imgScale*1405;

#computation 
$fa = 2/3*$load;
$fc = 1/3*$load;
$area = pi * $d * $d / 4;
$da = $fa*$l/($area*$e);
$dc = $fc*$l/($area*$e);
$deltaE = ($dc + 2/3*($da - $dc))*1000;

#set tolerance
Context()->flags->set(
tolerance=>.05);

##############################################################
#
#  PGML 
#
#

BEGIN_PGML

[@ image("UBC-SM-18-066.png", width=>[$width], height=>[$height]) @]*

A rigid beam [`AC`] hangs from two steel rods [`AB`] and [`CD`], each of length [`[$l]`] [`m`], diameter [`[$d]`] [`mm`], and [`E=[$e]`] [`GPa`]. A [`[$load]`] [`kN`] load acts a point [`E`] on the beam. Calculate the downward deflection of point [`E`] if [`x = \frac{L}{3}`].

[`\delta_{E}=`] [____]{"$deltaE"} [`mm`]

END_PGML

##############################################################

ENDDOCUMENT();