##DESCRIPTION
## 
##ENDDESCRIPTION

## DBsubject()
## DBchapter()
## DBsection()
## Date()
## Author()
## Level()
## KEYWORDS('Inductors', 'Capcitors', 'Energy', 'Op-amps')
## RESOURCES('UBC-CIR-18-532.png')
## Institution('University of British Columbia')
## TitleText('TBD')
## EditionText('TBD')
## AuthorText('TBD')
## Section('TBD')
## Problem('TBD')
##############################################################


DOCUMENT();

#image scale
$imgScale = .2;

#image aspect ratio
$width = $imgScale*3418;
$height = $imgScale*1964;



loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	"PGauxiliaryFunctions.pl",
	"niceTables.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

TEXT(beginproblem());

##############################################################
#
#  Setup
#
#

Context("Numeric");

#given
$rf = random(470000,500000,10000);
$rf_display=$rf/1000;
$ro = random(75,100,5);
$vin = random(15,20,1);
$r = random(10000,15000,1000);
$r_display=$r/1000;


#computation 
$vo_numer = (-$r*$rf*$ro*$vin-$rf**2*$ro*$vin);
$vo_denom =($r**3+2*$r**2*$rf+$r**2*$ro+$r*$rf*$ro);
$vo = $vo_numer/$vo_denom;


#set tolerance
Context()->flags->set(
tolerance=>.02,
);

##############################################################
#
#  Text 
#
#

BEGIN_PGML

[@ image("UBC-CIR-18-532.png", width=>[$width], height=>[$height]) @]*

Given [`Rf = [$rf_display]`] [`k\Omega`], [`Ro = [$ro]`] [`\Omega`], [`R= [$r_display]`] [`k\Omega`], [`Vin = [$vin]`] [`V`], determine the value of [`V_o`].

[`Vo=`] [_____]{"$vo"} [`V`]  

END_PGML

##############################################################

ENDDOCUMENT();